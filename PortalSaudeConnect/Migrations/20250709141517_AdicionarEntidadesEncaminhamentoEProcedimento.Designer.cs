// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortalSaudeConnect.Infrastructure.Data;

#nullable disable

namespace PortalSaudeConnect.Migrations
{
    [DbContext(typeof(PortalContext))]
    [Migration("20250709141517_AdicionarEntidadesEncaminhamentoEProcedimento")]
    partial class AdicionarEntidadesEncaminhamentoEProcedimento
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PortalSaudeConnect.Models.ClinicaModel", b =>
                {
                    b.Property<int>("IdClinica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClinica"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailContato")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EnderecoBairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EnderecoCep")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("EnderecoCidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EnderecoComplemento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EnderecoEstado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("EnderecoLogradouro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EnderecoNumero")
                        .HasColumnType("int");

                    b.Property<string>("NomeDaClinica")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TelefoneContato")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TelefoneWhatsapp")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("TipoClinica")
                        .HasColumnType("bit");

                    b.Property<int?>("UsuarioAdmId")
                        .HasColumnType("int");

                    b.HasKey("IdClinica");

                    b.ToTable("Clinicas");
                });

            modelBuilder.Entity("PortalSaudeConnect.Models.EncaminhamentoModel", b =>
                {
                    b.Property<int>("IdEncaminhamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEncaminhamento"));

                    b.Property<string>("CaminhoLaudoDigital")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ClinicaDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("ClinicaOrigemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacaoRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEnvioLaudo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRealizacaoExame")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRecebimentoDestino")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ExameProcedimentoRealizado")
                        .HasColumnType("bit");

                    b.Property<bool>("LaudoParecerEnviado")
                        .HasColumnType("bit");

                    b.Property<string>("ObservacoesDaSolicitacao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ProntuarioId")
                        .HasColumnType("int");

                    b.Property<string>("StatusAtual")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEncaminhamento");

                    b.HasIndex("ClinicaOrigemId");

                    b.HasIndex("ProntuarioId");

                    b.ToTable("Encaminhamentos");
                });

            modelBuilder.Entity("PortalSaudeConnect.Models.PacienteModel", b =>
                {
                    b.Property<int>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaciente"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EnderecoBairro")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EnderecoCep")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("EnderecoCidade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EnderecoComplemento")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EnderecoEstado")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("EnderecoLogradouro")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("EnderecoNumero")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NomePaciente")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneContato")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdPaciente");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("PortalSaudeConnect.Models.ProcedimentoModel", b =>
                {
                    b.Property<int>("IdProcedimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProcedimento"));

                    b.Property<string>("CodigoProcedimento")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataResultadoDisponivel")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoProcedimento")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EncaminhamentoId")
                        .HasColumnType("int");

                    b.Property<string>("NomeMedicoSolicitante")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ObservacoesEspecificas")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RegistroMedicoSolicitante")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("ResultadoDisponivel")
                        .HasColumnType("bit");

                    b.Property<string>("StatusProcedimento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdProcedimento");

                    b.HasIndex("EncaminhamentoId");

                    b.ToTable("Procedimentos");
                });

            modelBuilder.Entity("PortalSaudeConnect.Models.ProntuarioModel", b =>
                {
                    b.Property<int>("IdProntuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProntuario"));

                    b.Property<string>("CRMSolicitante")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ClinicaDestino")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClinicaOrigem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEncaminhamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExameSolicitado")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HistoricoConsulta")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("MotivoEncaminhamento")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ObservacoesEncaminhamento")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("ProfissionalSolicitante")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StatusEncaminhamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdProntuario");

                    b.HasIndex("PacienteId");

                    b.ToTable("Prontuarios");
                });

            modelBuilder.Entity("PortalSaudeConnect.Models.UsuarioModel", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<int>("ClinicaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("TipoAcessoPortal")
                        .HasMaxLength(20)
                        .HasColumnType("bit");

                    b.HasKey("IdUsuario");

                    b.HasIndex("ClinicaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PortalSaudeConnect.Models.EncaminhamentoModel", b =>
                {
                    b.HasOne("PortalSaudeConnect.Models.ClinicaModel", "ClinicaOrigem")
                        .WithMany()
                        .HasForeignKey("ClinicaOrigemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortalSaudeConnect.Models.ProntuarioModel", "ProntuarioPaciente")
                        .WithMany("Encaminhamentos")
                        .HasForeignKey("ProntuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClinicaOrigem");

                    b.Navigation("ProntuarioPaciente");
                });

            modelBuilder.Entity("PortalSaudeConnect.Models.ProcedimentoModel", b =>
                {
                    b.HasOne("PortalSaudeConnect.Models.EncaminhamentoModel", "Encaminhamento")
                        .WithMany("Procedimentos")
                        .HasForeignKey("EncaminhamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Encaminhamento");
                });

            modelBuilder.Entity("PortalSaudeConnect.Models.ProntuarioModel", b =>
                {
                    b.HasOne("PortalSaudeConnect.Models.PacienteModel", "PacienteNome")
                        .WithMany("Prontuarios")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PacienteNome");
                });

            modelBuilder.Entity("PortalSaudeConnect.Models.UsuarioModel", b =>
                {
                    b.HasOne("PortalSaudeConnect.Models.ClinicaModel", "Clinica")
                        .WithMany("Usuarios")
                        .HasForeignKey("ClinicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Clinica");
                });

            modelBuilder.Entity("PortalSaudeConnect.Models.ClinicaModel", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("PortalSaudeConnect.Models.EncaminhamentoModel", b =>
                {
                    b.Navigation("Procedimentos");
                });

            modelBuilder.Entity("PortalSaudeConnect.Models.PacienteModel", b =>
                {
                    b.Navigation("Prontuarios");
                });

            modelBuilder.Entity("PortalSaudeConnect.Models.ProntuarioModel", b =>
                {
                    b.Navigation("Encaminhamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
